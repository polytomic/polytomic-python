# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
from .execution_counts import ExecutionCounts
from .execution_status import ExecutionStatus
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GetExecutionResponseSchema(UniversalBaseModel):
    completed_at: typing.Optional[dt.datetime] = None
    counts: typing.Optional[ExecutionCounts] = None
    created_at: typing.Optional[dt.datetime] = None
    errors: typing.Optional[typing.List[str]] = None
    id: typing.Optional[str] = None
    started_at: typing.Optional[dt.datetime] = None
    status: typing.Optional[ExecutionStatus] = None
    type: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
