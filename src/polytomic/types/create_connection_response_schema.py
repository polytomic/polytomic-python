# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .connection_type_schema import ConnectionTypeSchema
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CreateConnectionResponseSchema(UniversalBaseModel):
    auth_code: typing.Optional[str] = pydantic.Field(default=None)
    """
    Code to enter in order to complete connection authentication.
    """

    auth_url: typing.Optional[str] = pydantic.Field(default=None)
    """
    URL to visit to complete connection authentication.
    """

    configuration: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    id: typing.Optional[str] = None
    name: typing.Optional[str] = None
    organization_id: typing.Optional[str] = None
    policies: typing.Optional[typing.List[str]] = None
    status: typing.Optional[str] = None
    status_error: typing.Optional[str] = None
    type: typing.Optional[ConnectionTypeSchema] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
