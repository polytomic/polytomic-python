# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .model_model_field_request import ModelModelFieldRequest
from .enrichment import Enrichment
from .model_relation import ModelRelation
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CreateModelRequest(UniversalBaseModel):
    additional_fields: typing.Optional[typing.List[ModelModelFieldRequest]] = None
    configuration: typing.Dict[str, typing.Optional[typing.Any]]
    connection_id: str
    enricher: typing.Optional[Enrichment] = None
    fields: typing.Optional[typing.List[str]] = None
    identifier: typing.Optional[str] = None
    labels: typing.Optional[typing.List[str]] = None
    name: str
    organization_id: typing.Optional[str] = None
    policies: typing.Optional[typing.List[str]] = None
    relations: typing.Optional[typing.List[ModelRelation]] = None
    tracking_columns: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
