# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
from .common_output_actor import CommonOutputActor
from .enrichment import Enrichment
from .model_field import ModelField
from .label_label import LabelLabel
from .relation import Relation
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ModelResponse(UniversalBaseModel):
    configuration: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    connection_id: typing.Optional[str] = None
    created_at: typing.Optional[dt.datetime] = None
    created_by: typing.Optional[CommonOutputActor] = None
    enricher: typing.Optional[Enrichment] = None
    fields: typing.Optional[typing.List[ModelField]] = None
    id: typing.Optional[str] = None
    identifier: typing.Optional[str] = None
    labels: typing.Optional[typing.List[LabelLabel]] = None
    name: typing.Optional[str] = None
    organization_id: typing.Optional[str] = None
    policies: typing.Optional[typing.List[str]] = None
    relations: typing.Optional[typing.List[Relation]] = None
    tracking_columns: typing.Optional[typing.List[str]] = None
    type: typing.Optional[str] = None
    updated_at: typing.Optional[dt.datetime] = None
    updated_by: typing.Optional[CommonOutputActor] = None
    version: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
