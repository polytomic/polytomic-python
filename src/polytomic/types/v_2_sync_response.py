# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .v_2_filter import V2Filter
from .v_2_identity import V2Identity
from .v_2_override import V2Override
from .v_2_schedule import V2Schedule
from .v_2_sync_field import V2SyncField
from .v_2_target import V2Target

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class V2SyncResponse(pydantic.BaseModel):
    active: typing.Optional[bool]
    fields: typing.Optional[typing.List[V2SyncField]]
    filter_logic: typing.Optional[str]
    filters: typing.Optional[typing.List[V2Filter]]
    id: typing.Optional[str]
    identity: typing.Optional[V2Identity]
    mode: typing.Optional[str]
    name: typing.Optional[str]
    organization_id: typing.Optional[str]
    override_fields: typing.Optional[typing.List[V2SyncField]]
    overrides: typing.Optional[typing.List[V2Override]]
    policies: typing.Optional[typing.List[str]]
    schedule: typing.Optional[V2Schedule]
    sync_all_records: typing.Optional[bool]
    target: typing.Optional[V2Target]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
