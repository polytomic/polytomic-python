# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .configuration_value import ConfigurationValue
from .source_meta import SourceMeta
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ModelSyncSourceMetaResponse(UniversalBaseModel):
    configuration: typing.Optional[typing.Dict[str, ConfigurationValue]] = None
    items: typing.Optional[typing.Dict[str, typing.Optional[SourceMeta]]] = None
    requires_one_of: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
