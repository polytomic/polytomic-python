# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class RestErrResponse(UniversalBaseModel):
    code: typing.Optional[int] = pydantic.Field(default=None)
    """
    Application-specific error code.
    """

    context: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Application context.
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message.
    """

    status: typing.Optional[str] = pydantic.Field(default=None)
    """
    Status text.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
