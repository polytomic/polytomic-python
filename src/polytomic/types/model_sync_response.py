# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
from .common_output_actor import CommonOutputActor
from .model_sync_field import ModelSyncField
from .filter import Filter
from .identity import Identity
from .override import Override
from .schedule import Schedule
from .target import Target
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ModelSyncResponse(UniversalBaseModel):
    active: typing.Optional[bool] = None
    created_at: typing.Optional[dt.datetime] = None
    created_by: typing.Optional[CommonOutputActor] = None
    fields: typing.Optional[typing.List[ModelSyncField]] = None
    filter_logic: typing.Optional[str] = None
    filters: typing.Optional[typing.List[Filter]] = None
    id: typing.Optional[str] = None
    identity: typing.Optional[Identity] = None
    mode: typing.Optional[str] = None
    name: typing.Optional[str] = None
    only_enrich_updates: typing.Optional[bool] = None
    organization_id: typing.Optional[str] = None
    override_fields: typing.Optional[typing.List[ModelSyncField]] = None
    overrides: typing.Optional[typing.List[Override]] = None
    policies: typing.Optional[typing.List[str]] = None
    schedule: typing.Optional[Schedule] = None
    skip_initial_backfill: typing.Optional[bool] = None
    sync_all_records: typing.Optional[bool] = None
    target: typing.Optional[Target] = None
    updated_at: typing.Optional[dt.datetime] = None
    updated_by: typing.Optional[CommonOutputActor] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
