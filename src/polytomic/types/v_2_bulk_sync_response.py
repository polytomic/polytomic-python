# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .bulk_schedule import BulkSchedule

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class V2BulkSyncResponse(pydantic.BaseModel):
    active: typing.Optional[bool]
    destination_configuration: typing.Optional[typing.Dict[str, typing.Any]]
    destination_connection_id: typing.Optional[str]
    discover: typing.Optional[bool]
    id: typing.Optional[str]
    mode: typing.Optional[str]
    name: typing.Optional[str]
    organization_id: typing.Optional[str]
    policies: typing.Optional[typing.List[str]]
    schedule: typing.Optional[BulkSchedule]
    source_configuration: typing.Optional[typing.Dict[str, typing.Any]]
    source_connection_id: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
