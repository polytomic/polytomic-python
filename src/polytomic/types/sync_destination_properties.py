# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SyncDestinationProperties(UniversalBaseModel):
    does_not_report_operation_counts: typing.Optional[bool] = None
    mappings_not_required: typing.Optional[bool] = None
    new_target_label: typing.Optional[str] = None
    optional_target_mappings: typing.Optional[bool] = None
    primary_metadata_object: typing.Optional[str] = None
    requires_configuration: typing.Optional[bool] = None
    supports_field_creation: typing.Optional[bool] = None
    supports_field_type_selection: typing.Optional[bool] = None
    supports_identity_field_creation: typing.Optional[bool] = None
    supports_target_filters: typing.Optional[bool] = None
    target_creator: typing.Optional[bool] = None
    use_field_names_as_labels: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
