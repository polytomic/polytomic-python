# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .source import Source
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ModelSyncField(UniversalBaseModel):
    new: typing.Optional[bool] = pydantic.Field(default=None)
    """
    New is set to true if the target field should be created by Polytomic. This is not supported by all backends.
    """

    override_value: typing.Optional[str] = pydantic.Field(default=None)
    """
    Value to set in the target field; if provided, 'source' is ignored.
    """

    source: typing.Optional[Source] = None
    sync_mode: typing.Optional[str] = pydantic.Field(default=None)
    """
    Sync mode for the field; defaults to 'updateOrCreate'. If set to 'create', the field will not be synced if it already has a value. This is not supported by all backends.
    """

    target: str = pydantic.Field()
    """
    Target field ID the source field value will be written to.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
