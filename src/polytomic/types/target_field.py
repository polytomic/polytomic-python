# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .identity_function import IdentityFunction
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TargetField(UniversalBaseModel):
    association: typing.Optional[bool] = None
    createable: typing.Optional[bool] = None
    description: typing.Optional[str] = None
    filterable: typing.Optional[bool] = None
    id: typing.Optional[str] = None
    identity_functions: typing.Optional[typing.List[IdentityFunction]] = None
    name: typing.Optional[str] = None
    required: typing.Optional[bool] = None
    source_type: typing.Optional[str] = None
    supports_identity: typing.Optional[bool] = None
    type: typing.Optional[str] = None
    updateable: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
