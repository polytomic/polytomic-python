# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .target_field import TargetField
from .mode import Mode
from .sync_destination_properties import SyncDestinationProperties
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TargetResponse(UniversalBaseModel):
    fields: typing.Optional[typing.List[TargetField]] = None
    id: typing.Optional[str] = None
    modes: typing.Optional[typing.List[Mode]] = None
    name: typing.Optional[str] = None
    properties: typing.Optional[SyncDestinationProperties] = None
    refreshed_at: typing.Optional[dt.datetime] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
