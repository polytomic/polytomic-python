# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .schedule_frequency import ScheduleFrequency
from .run_after import RunAfter
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Schedule(UniversalBaseModel):
    connection_id: typing.Optional[str] = None
    day_of_month: typing.Optional[str] = None
    day_of_week: typing.Optional[str] = None
    frequency: typing.Optional[ScheduleFrequency] = None
    hour: typing.Optional[str] = None
    job_id: typing.Optional[int] = None
    minute: typing.Optional[str] = None
    month: typing.Optional[str] = None
    run_after: typing.Optional[RunAfter] = None
    run_after_success_only: typing.Optional[bool] = pydantic.Field(default=None)
    """
    If true, the sync will only run if the dependent syncs completed successfully.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
