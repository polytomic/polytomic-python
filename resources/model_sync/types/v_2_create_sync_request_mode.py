# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class V2CreateSyncRequestMode(str, enum.Enum):
    UPDATE = "update"
    UPDATE_OR_CREATE = "updateOrCreate"
    CREATE = "create"
    REPLACE = "replace"
    APPEND = "append"
    SNAPSHOT = "snapshot"

    def visit(
        self,
        update: typing.Callable[[], T_Result],
        update_or_create: typing.Callable[[], T_Result],
        create: typing.Callable[[], T_Result],
        replace: typing.Callable[[], T_Result],
        append: typing.Callable[[], T_Result],
        snapshot: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is V2CreateSyncRequestMode.UPDATE:
            return update()
        if self is V2CreateSyncRequestMode.UPDATE_OR_CREATE:
            return update_or_create()
        if self is V2CreateSyncRequestMode.CREATE:
            return create()
        if self is V2CreateSyncRequestMode.REPLACE:
            return replace()
        if self is V2CreateSyncRequestMode.APPEND:
            return append()
        if self is V2CreateSyncRequestMode.SNAPSHOT:
            return snapshot()
